---
import { getCollection } from "astro:content";
import { getImage } from "astro:assets";

import Layout from "../layouts/Layout.astro";
import Logo from "../components/Logo.astro";
import ActionButtons from "../components/ActionButtons.astro";
import Badge from "../components/Badge.astro";

const projects = await getCollection("projects");
const sortedProjects = projects.sort((a, b) => {
  return a.data.sortIndex - b.data.sortIndex;
});
---

{/* title is intentionally empty here to use the fallback */}
<Layout title="">
  <div
    class="mt-12 md:mt-16 lg:mt-20 xl:mt-24 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
  >
    <div class="text-center max-w-md mx-auto flex flex-col gap-2 items-center">
      <h1
        class="uppercase font-semibold tracking-widest text-xs text-slate-500"
      >
        <span>Built with</span>
        <a
          href="https://keystatic.com"
          target="_blank"
          class="mt-2 block group"
        >
          <span class="sr-only">Keystatic</span>
          <Logo class="h-6 text-black" />
        </a>
      </h1>
      <p class="mt-2 md:mt-4 text-slate-600 md:text-lg">
        A collection of projects using Keystatic to manage parts of their
        codebase.
      </p>
    </div>

    <ul
      class="py-8 sm:py-12 gap-x-6 gap-y-16 lg:py-16 grid sm:grid-cols-2 lg:grid-cols-3 lg:gap-x-8 xl:gap-x-12 lg:gap-y-12 xl:gap-y-16"
    >
      {
        sortedProjects.map(async ({ slug, data, body }, index) => {
          const arr = [
            { width: 373, height: 231 },
            { width: 560, height: 348 },
            { width: 746, height: 464 },
          ].map((el) => {
            return getImage({
              src: data.coverImage,
              format: "webp",
              width: el.width,
              quality: 100,
              height: el.height,
            });
          });
          const [low, medium, high] = await Promise.all(arr);
          return (
            <li>
              <div class="bg-black/[0.03] p-3 rounded-md">
                <div class="aspect-[16/10] relative">
                  <img
                  transition:name={`image-${slug}`}
                  srcset={`${low.src},
                  ${medium.src} 1.5x,
                  ${high.src} 2x`}
                  class="rounded-lg absolute inset-0 object-cover w-full shadow-lg"
                  src={high.src}
                  alt=""
                  loading={index < 6 ? "eager" : "lazy"}
                  />
                  </div>
                </div>
              <div class="mt-4 flex flex-wrap gap-x-2 gap-y-1 items-center">
                <h2
                  class="xl:text-lg font-semibold group-hover:underline"
                  transition:name={`title-${slug}`}
                >
                  {data.title}
                </h2>
                <Badge type={data.type} transition:name={`badge-${slug}`} />
              </div>
              <p
                class="mt-1 text-slate-600"
                transition:name={`summary-${slug}`}
              >
                {data.summary}
              </p>
              <div class="mt-4 flex gap-2 items-center flex-wrap">
                <ActionButtons data={data} slug={slug} body={body} />
              </div>
            </li>
          );
        })
      }
    </ul>
  </div>
</Layout>
