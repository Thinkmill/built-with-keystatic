---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";

import Layout from "../../layouts/Layout.astro";
import ActionButtons from "../../components/ActionButtons.astro";
import Badge from "../../components/Badge.astro";

const { slug } = Astro.params;
if (!slug) throw new Error("Missing slug param");

const project = await getEntry("projects", slug);
if (!project) throw new Error(`Project not found: ${slug}`);

const { data } = project;

// Get the <Content /> rich text component
const { Content } = await project.render();

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.slug },
  }));
}
---

<Layout title={data.title} description={data.summary} seoImage={data.coverImage.src}>
  <div class="relative">
    <header
      class="pb-12 pt-16 md:py-16 lg:pt-20 xl:pt-24 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center space-y-6 lg:space-y-8"
    >
      {
        /* In prod, the "root" URL is `/showcase`
          See https://github.com/Thinkmill/keystatic/blob/main/docs/vercel.json#L4-L7 */
      }
      <a
        href={import.meta.env.MODE === "production" ? "/showcase" : "/"}
        class="absolute top-4 left-4 text-sm underline hover:no-underline"
        >&larr; All projects</a
      >
      <h1
        class="text-3xl sm:text-4xl md:text-5xl font-extrabold"
        transition:name={`title-${slug}`}
        >
        {data.title}
      </h1>
      <div class="bg-black/[0.03] p-4 rounded-md max-w-lg mx-auto w-full mt-6 lg:mt-8">
        <div class="aspect-[16/10] relative">
          <Image
            src={data.coverImage}
            alt=""
            class="rounded-md absolute inset-0 object-cover shadow-lg"
            width={373 * 3}
            height={232 * 3}
            loading="eager"
            transition:name={`image-${slug}`}
          />
        </div>
      </div>
      <Badge type={data.type} transition:name={`badge-${slug}`} />
      <p
        class="text-slate-600 md:text-lg max-w-xl mx-auto"
        transition:name={`summary-${slug}`}
      >
        {data.summary}
      </p>
      <div class="flex items-center justify-center gap-2 flex-wrap">
        <ActionButtons data={data} slug={slug} />
      </div>
    </header>

    {
      project.body && (
        <main class="bg-white py-12">
          <div class="mx-auto px-4 sm:px-6 lg:px-8 prose lg:prose-lg">
            <Content />
          </div>
        </main>
      )
    }
  </div>
</Layout>
